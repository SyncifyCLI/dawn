{
  "version": 3,
  "sources": ["../../source/assets/scripts/cart.js"],
  "sourcesContent": ["class CartRemoveButton extends HTMLElement {\n  constructor() {\n    super();\n\n    this.addEventListener('click', (event) => {\n      event.preventDefault();\n      const cartItems = this.closest('cart-items') || this.closest('cart-drawer-items');\n      cartItems.updateQuantity(this.dataset.index, 0);\n    });\n  }\n}\n\ncustomElements.define('cart-remove-button', CartRemoveButton);\n\nclass CartItems extends HTMLElement {\n  constructor() {\n    super();\n    this.lineItemStatusElement =\n      document.getElementById('shopping-cart-line-item-status') || document.getElementById('CartDrawer-LineItemStatus');\n\n    const debouncedOnChange = debounce((event) => {\n      this.onChange(event);\n    }, ON_CHANGE_DEBOUNCE_TIMER);\n\n    this.addEventListener('change', debouncedOnChange.bind(this));\n  }\n\n  cartUpdateUnsubscriber = undefined;\n\n  connectedCallback() {\n    this.cartUpdateUnsubscriber = subscribe(PUB_SUB_EVENTS.cartUpdate, (event) => {\n      if (event.source === 'cart-items') {\n        return;\n      }\n      this.onCartUpdate();\n    });\n  }\n\n  disconnectedCallback() {\n    if (this.cartUpdateUnsubscriber) {\n      this.cartUpdateUnsubscriber();\n    }\n  }\n\n  resetQuantityInput(id) {\n    const input = this.querySelector(`#Quantity-${id}`);\n    input.value = input.getAttribute('value');\n    this.isEnterPressed = false;\n  }\n\n  setValidity(event, index, message) {\n    event.target.setCustomValidity(message);\n    event.target.reportValidity();\n    this.resetQuantityInput(index);\n    event.target.select();\n  }\n\n  validateQuantity(event) {\n    const inputValue = parseInt(event.target.value);\n    const index = event.target.dataset.index;\n    let message = '';\n\n    if (inputValue < event.target.dataset.min) {\n      message = window.quickOrderListStrings.min_error.replace('[min]', event.target.dataset.min);\n    } else if (inputValue > parseInt(event.target.max)) {\n      message = window.quickOrderListStrings.max_error.replace('[max]', event.target.max);\n    } else if (inputValue % parseInt(event.target.step) !== 0) {\n      message = window.quickOrderListStrings.step_error.replace('[step]', event.target.step);\n    }\n\n    if (message) {\n      this.setValidity(event, index, message);\n    } else {\n      event.target.setCustomValidity('');\n      event.target.reportValidity();\n      this.updateQuantity(\n        index,\n        inputValue,\n        document.activeElement.getAttribute('name'),\n        event.target.dataset.quantityVariantId\n      );\n    }\n  }\n\n  onChange(event) {\n    this.validateQuantity(event);\n  }\n\n  onCartUpdate() {\n    if (this.tagName === 'CART-DRAWER-ITEMS') {\n      fetch(`${routes.cart_url}?section_id=cart-drawer`)\n        .then((response) => response.text())\n        .then((responseText) => {\n          const html = new DOMParser().parseFromString(responseText, 'text/html');\n          const selectors = ['cart-drawer-items', '.cart-drawer__footer'];\n          for (const selector of selectors) {\n            const targetElement = document.querySelector(selector);\n            const sourceElement = html.querySelector(selector);\n            if (targetElement && sourceElement) {\n              targetElement.replaceWith(sourceElement);\n            }\n          }\n        })\n        .catch((e) => {\n          console.error(e);\n        });\n    } else {\n      fetch(`${routes.cart_url}?section_id=main-cart-items`)\n        .then((response) => response.text())\n        .then((responseText) => {\n          const html = new DOMParser().parseFromString(responseText, 'text/html');\n          const sourceQty = html.querySelector('cart-items');\n          this.innerHTML = sourceQty.innerHTML;\n        })\n        .catch((e) => {\n          console.error(e);\n        });\n    }\n  }\n\n  getSectionsToRender() {\n    return [\n      {\n        id: 'main-cart-items',\n        section: document.getElementById('main-cart-items').dataset.id,\n        selector: '.js-contents',\n      },\n      {\n        id: 'cart-icon-bubble',\n        section: 'cart-icon-bubble',\n        selector: '.shopify-section',\n      },\n      {\n        id: 'cart-live-region-text',\n        section: 'cart-live-region-text',\n        selector: '.shopify-section',\n      },\n      {\n        id: 'main-cart-footer',\n        section: document.getElementById('main-cart-footer').dataset.id,\n        selector: '.js-contents',\n      },\n    ];\n  }\n\n  updateQuantity(line, quantity, name, variantId) {\n    this.enableLoading(line);\n\n    const body = JSON.stringify({\n      line,\n      quantity,\n      sections: this.getSectionsToRender().map((section) => section.section),\n      sections_url: window.location.pathname,\n    });\n\n    fetch(`${routes.cart_change_url}`, { ...fetchConfig(), ...{ body } })\n      .then((response) => {\n        return response.text();\n      })\n      .then((state) => {\n        const parsedState = JSON.parse(state);\n        const quantityElement =\n          document.getElementById(`Quantity-${line}`) || document.getElementById(`Drawer-quantity-${line}`);\n        const items = document.querySelectorAll('.cart-item');\n\n        if (parsedState.errors) {\n          quantityElement.value = quantityElement.getAttribute('value');\n          this.updateLiveRegions(line, parsedState.errors);\n          return;\n        }\n\n        this.classList.toggle('is-empty', parsedState.item_count === 0);\n        const cartDrawerWrapper = document.querySelector('cart-drawer');\n        const cartFooter = document.getElementById('main-cart-footer');\n\n        if (cartFooter) cartFooter.classList.toggle('is-empty', parsedState.item_count === 0);\n        if (cartDrawerWrapper) cartDrawerWrapper.classList.toggle('is-empty', parsedState.item_count === 0);\n\n        this.getSectionsToRender().forEach((section) => {\n          const elementToReplace =\n            document.getElementById(section.id).querySelector(section.selector) || document.getElementById(section.id);\n          elementToReplace.innerHTML = this.getSectionInnerHTML(\n            parsedState.sections[section.section],\n            section.selector\n          );\n        });\n        const updatedValue = parsedState.items[line - 1] ? parsedState.items[line - 1].quantity : undefined;\n        let message = '';\n        if (items.length === parsedState.items.length && updatedValue !== parseInt(quantityElement.value)) {\n          if (typeof updatedValue === 'undefined') {\n            message = window.cartStrings.error;\n          } else {\n            message = window.cartStrings.quantityError.replace('[quantity]', updatedValue);\n          }\n        }\n        this.updateLiveRegions(line, message);\n\n        const lineItem =\n          document.getElementById(`CartItem-${line}`) || document.getElementById(`CartDrawer-Item-${line}`);\n        if (lineItem && lineItem.querySelector(`[name=\"${name}\"]`)) {\n          cartDrawerWrapper\n            ? trapFocus(cartDrawerWrapper, lineItem.querySelector(`[name=\"${name}\"]`))\n            : lineItem.querySelector(`[name=\"${name}\"]`).focus();\n        } else if (parsedState.item_count === 0 && cartDrawerWrapper) {\n          trapFocus(cartDrawerWrapper.querySelector('.drawer__inner-empty'), cartDrawerWrapper.querySelector('a'));\n        } else if (document.querySelector('.cart-item') && cartDrawerWrapper) {\n          trapFocus(cartDrawerWrapper, document.querySelector('.cart-item__name'));\n        }\n\n        publish(PUB_SUB_EVENTS.cartUpdate, { source: 'cart-items', cartData: parsedState, variantId: variantId });\n      })\n      .catch(() => {\n        this.querySelectorAll('.loading__spinner').forEach((overlay) => overlay.classList.add('hidden'));\n        const errors = document.getElementById('cart-errors') || document.getElementById('CartDrawer-CartErrors');\n        errors.textContent = window.cartStrings.error;\n      })\n      .finally(() => {\n        this.disableLoading(line);\n      });\n  }\n\n  updateLiveRegions(line, message) {\n    const lineItemError =\n      document.getElementById(`Line-item-error-${line}`) || document.getElementById(`CartDrawer-LineItemError-${line}`);\n    if (lineItemError) lineItemError.querySelector('.cart-item__error-text').textContent = message;\n\n    this.lineItemStatusElement.setAttribute('aria-hidden', true);\n\n    const cartStatus =\n      document.getElementById('cart-live-region-text') || document.getElementById('CartDrawer-LiveRegionText');\n    cartStatus.setAttribute('aria-hidden', false);\n\n    setTimeout(() => {\n      cartStatus.setAttribute('aria-hidden', true);\n    }, 1000);\n  }\n\n  getSectionInnerHTML(html, selector) {\n    return new DOMParser().parseFromString(html, 'text/html').querySelector(selector).innerHTML;\n  }\n\n  enableLoading(line) {\n    const mainCartItems = document.getElementById('main-cart-items') || document.getElementById('CartDrawer-CartItems');\n    mainCartItems.classList.add('cart__items--disabled');\n\n    const cartItemElements = this.querySelectorAll(`#CartItem-${line} .loading__spinner`);\n    const cartDrawerItemElements = this.querySelectorAll(`#CartDrawer-Item-${line} .loading__spinner`);\n\n    [...cartItemElements, ...cartDrawerItemElements].forEach((overlay) => overlay.classList.remove('hidden'));\n\n    document.activeElement.blur();\n    this.lineItemStatusElement.setAttribute('aria-hidden', false);\n  }\n\n  disableLoading(line) {\n    const mainCartItems = document.getElementById('main-cart-items') || document.getElementById('CartDrawer-CartItems');\n    mainCartItems.classList.remove('cart__items--disabled');\n\n    const cartItemElements = this.querySelectorAll(`#CartItem-${line} .loading__spinner`);\n    const cartDrawerItemElements = this.querySelectorAll(`#CartDrawer-Item-${line} .loading__spinner`);\n\n    cartItemElements.forEach((overlay) => overlay.classList.add('hidden'));\n    cartDrawerItemElements.forEach((overlay) => overlay.classList.add('hidden'));\n  }\n}\n\ncustomElements.define('cart-items', CartItems);\n\nif (!customElements.get('cart-note')) {\n  customElements.define(\n    'cart-note',\n    class CartNote extends HTMLElement {\n      constructor() {\n        super();\n\n        this.addEventListener(\n          'input',\n          debounce((event) => {\n            const body = JSON.stringify({ note: event.target.value });\n            fetch(`${routes.cart_update_url}`, { ...fetchConfig(), ...{ body } });\n          }, ON_CHANGE_DEBOUNCE_TIMER)\n        );\n      }\n    }\n  );\n}\n"],
  "mappings": "6dAAA,IAAMA,EAAN,cAA+B,WAAY,CACzC,aAAc,CACZ,MAAM,EAEN,KAAK,iBAAiB,QAAUC,GAAU,CACxCA,EAAM,eAAe,GACH,KAAK,QAAQ,YAAY,GAAK,KAAK,QAAQ,mBAAmB,GACtE,eAAe,KAAK,QAAQ,MAAO,CAAC,CAChD,CAAC,CACH,CACF,EAEA,eAAe,OAAO,qBAAsBD,CAAgB,EAE5D,IAAME,EAAN,cAAwB,WAAY,CAClC,aAAc,CACZ,MAAM,EAWRC,EAAA,+BAVE,KAAK,sBACH,SAAS,eAAe,gCAAgC,GAAK,SAAS,eAAe,2BAA2B,EAElH,IAAMC,EAAoB,SAAUH,GAAU,CAC5C,KAAK,SAASA,CAAK,CACrB,EAAG,wBAAwB,EAE3B,KAAK,iBAAiB,SAAUG,EAAkB,KAAK,IAAI,CAAC,CAC9D,CAIA,mBAAoB,CAClB,KAAK,uBAAyB,UAAU,eAAe,WAAaH,GAAU,CACxEA,EAAM,SAAW,cAGrB,KAAK,aAAa,CACpB,CAAC,CACH,CAEA,sBAAuB,CACjB,KAAK,wBACP,KAAK,uBAAuB,CAEhC,CAEA,mBAAmBI,EAAI,CACrB,IAAMC,EAAQ,KAAK,cAAc,aAAaD,CAAE,EAAE,EAClDC,EAAM,MAAQA,EAAM,aAAa,OAAO,EACxC,KAAK,eAAiB,EACxB,CAEA,YAAYL,EAAOM,EAAOC,EAAS,CACjCP,EAAM,OAAO,kBAAkBO,CAAO,EACtCP,EAAM,OAAO,eAAe,EAC5B,KAAK,mBAAmBM,CAAK,EAC7BN,EAAM,OAAO,OAAO,CACtB,CAEA,iBAAiBA,EAAO,CACtB,IAAMQ,EAAa,SAASR,EAAM,OAAO,KAAK,EACxCM,EAAQN,EAAM,OAAO,QAAQ,MAC/BO,EAAU,GAEVC,EAAaR,EAAM,OAAO,QAAQ,IACpCO,EAAU,OAAO,sBAAsB,UAAU,QAAQ,QAASP,EAAM,OAAO,QAAQ,GAAG,EACjFQ,EAAa,SAASR,EAAM,OAAO,GAAG,EAC/CO,EAAU,OAAO,sBAAsB,UAAU,QAAQ,QAASP,EAAM,OAAO,GAAG,EACzEQ,EAAa,SAASR,EAAM,OAAO,IAAI,IAAM,IACtDO,EAAU,OAAO,sBAAsB,WAAW,QAAQ,SAAUP,EAAM,OAAO,IAAI,GAGnFO,EACF,KAAK,YAAYP,EAAOM,EAAOC,CAAO,GAEtCP,EAAM,OAAO,kBAAkB,EAAE,EACjCA,EAAM,OAAO,eAAe,EAC5B,KAAK,eACHM,EACAE,EACA,SAAS,cAAc,aAAa,MAAM,EAC1CR,EAAM,OAAO,QAAQ,iBACvB,EAEJ,CAEA,SAASA,EAAO,CACd,KAAK,iBAAiBA,CAAK,CAC7B,CAEA,cAAe,CACT,KAAK,UAAY,oBACnB,MAAM,GAAG,OAAO,QAAQ,yBAAyB,EAC9C,KAAMS,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAiB,CACtB,IAAMC,EAAO,IAAI,UAAU,EAAE,gBAAgBD,EAAc,WAAW,EAChEE,EAAY,CAAC,oBAAqB,sBAAsB,EAC9D,QAAWC,KAAYD,EAAW,CAChC,IAAME,EAAgB,SAAS,cAAcD,CAAQ,EAC/CE,EAAgBJ,EAAK,cAAcE,CAAQ,EAC7CC,GAAiBC,GACnBD,EAAc,YAAYC,CAAa,CAE3C,CACF,CAAC,EACA,MAAOC,GAAM,CACZ,QAAQ,MAAMA,CAAC,CACjB,CAAC,EAEH,MAAM,GAAG,OAAO,QAAQ,6BAA6B,EAClD,KAAMP,GAAaA,EAAS,KAAK,CAAC,EAClC,KAAMC,GAAiB,CAEtB,IAAMO,EADO,IAAI,UAAU,EAAE,gBAAgBP,EAAc,WAAW,EAC/C,cAAc,YAAY,EACjD,KAAK,UAAYO,EAAU,SAC7B,CAAC,EACA,MAAOD,GAAM,CACZ,QAAQ,MAAMA,CAAC,CACjB,CAAC,CAEP,CAEA,qBAAsB,CACpB,MAAO,CACL,CACE,GAAI,kBACJ,QAAS,SAAS,eAAe,iBAAiB,EAAE,QAAQ,GAC5D,SAAU,cACZ,EACA,CACE,GAAI,mBACJ,QAAS,mBACT,SAAU,kBACZ,EACA,CACE,GAAI,wBACJ,QAAS,wBACT,SAAU,kBACZ,EACA,CACE,GAAI,mBACJ,QAAS,SAAS,eAAe,kBAAkB,EAAE,QAAQ,GAC7D,SAAU,cACZ,CACF,CACF,CAEA,eAAeE,EAAMC,EAAUC,EAAMC,EAAW,CAC9C,KAAK,cAAcH,CAAI,EAEvB,IAAMI,EAAO,KAAK,UAAU,CAC1B,KAAAJ,EACA,SAAAC,EACA,SAAU,KAAK,oBAAoB,EAAE,IAAKI,GAAYA,EAAQ,OAAO,EACrE,aAAc,OAAO,SAAS,QAChC,CAAC,EAED,MAAM,GAAG,OAAO,eAAe,GAAIC,EAAAC,EAAA,GAAK,YAAY,GAAjB,CAAyB,KAAAH,CAAO,EAAC,EACjE,KAAMb,GACEA,EAAS,KAAK,CACtB,EACA,KAAMiB,GAAU,CACf,IAAMC,EAAc,KAAK,MAAMD,CAAK,EAC9BE,EACJ,SAAS,eAAe,YAAYV,CAAI,EAAE,GAAK,SAAS,eAAe,mBAAmBA,CAAI,EAAE,EAC5FW,EAAQ,SAAS,iBAAiB,YAAY,EAEpD,GAAIF,EAAY,OAAQ,CACtBC,EAAgB,MAAQA,EAAgB,aAAa,OAAO,EAC5D,KAAK,kBAAkBV,EAAMS,EAAY,MAAM,EAC/C,MACF,CAEA,KAAK,UAAU,OAAO,WAAYA,EAAY,aAAe,CAAC,EAC9D,IAAMG,EAAoB,SAAS,cAAc,aAAa,EACxDC,EAAa,SAAS,eAAe,kBAAkB,EAEzDA,GAAYA,EAAW,UAAU,OAAO,WAAYJ,EAAY,aAAe,CAAC,EAChFG,GAAmBA,EAAkB,UAAU,OAAO,WAAYH,EAAY,aAAe,CAAC,EAElG,KAAK,oBAAoB,EAAE,QAASJ,GAAY,CAC9C,IAAMS,EACJ,SAAS,eAAeT,EAAQ,EAAE,EAAE,cAAcA,EAAQ,QAAQ,GAAK,SAAS,eAAeA,EAAQ,EAAE,EAC3GS,EAAiB,UAAY,KAAK,oBAChCL,EAAY,SAASJ,EAAQ,OAAO,EACpCA,EAAQ,QACV,CACF,CAAC,EACD,IAAMU,EAAeN,EAAY,MAAMT,EAAO,CAAC,EAAIS,EAAY,MAAMT,EAAO,CAAC,EAAE,SAAW,OACtFX,EAAU,GACVsB,EAAM,SAAWF,EAAY,MAAM,QAAUM,IAAiB,SAASL,EAAgB,KAAK,IAC1F,OAAOK,GAAiB,YAC1B1B,EAAU,OAAO,YAAY,MAE7BA,EAAU,OAAO,YAAY,cAAc,QAAQ,aAAc0B,CAAY,GAGjF,KAAK,kBAAkBf,EAAMX,CAAO,EAEpC,IAAM2B,EACJ,SAAS,eAAe,YAAYhB,CAAI,EAAE,GAAK,SAAS,eAAe,mBAAmBA,CAAI,EAAE,EAC9FgB,GAAYA,EAAS,cAAc,UAAUd,CAAI,IAAI,EACvDU,EACI,UAAUA,EAAmBI,EAAS,cAAc,UAAUd,CAAI,IAAI,CAAC,EACvEc,EAAS,cAAc,UAAUd,CAAI,IAAI,EAAE,MAAM,EAC5CO,EAAY,aAAe,GAAKG,EACzC,UAAUA,EAAkB,cAAc,sBAAsB,EAAGA,EAAkB,cAAc,GAAG,CAAC,EAC9F,SAAS,cAAc,YAAY,GAAKA,GACjD,UAAUA,EAAmB,SAAS,cAAc,kBAAkB,CAAC,EAGzE,QAAQ,eAAe,WAAY,CAAE,OAAQ,aAAc,SAAUH,EAAa,UAAWN,CAAU,CAAC,CAC1G,CAAC,EACA,MAAM,IAAM,CACX,KAAK,iBAAiB,mBAAmB,EAAE,QAASc,GAAYA,EAAQ,UAAU,IAAI,QAAQ,CAAC,EAC/F,IAAMC,EAAS,SAAS,eAAe,aAAa,GAAK,SAAS,eAAe,uBAAuB,EACxGA,EAAO,YAAc,OAAO,YAAY,KAC1C,CAAC,EACA,QAAQ,IAAM,CACb,KAAK,eAAelB,CAAI,CAC1B,CAAC,CACL,CAEA,kBAAkBA,EAAMX,EAAS,CAC/B,IAAM8B,EACJ,SAAS,eAAe,mBAAmBnB,CAAI,EAAE,GAAK,SAAS,eAAe,4BAA4BA,CAAI,EAAE,EAC9GmB,IAAeA,EAAc,cAAc,wBAAwB,EAAE,YAAc9B,GAEvF,KAAK,sBAAsB,aAAa,cAAe,EAAI,EAE3D,IAAM+B,EACJ,SAAS,eAAe,uBAAuB,GAAK,SAAS,eAAe,2BAA2B,EACzGA,EAAW,aAAa,cAAe,EAAK,EAE5C,WAAW,IAAM,CACfA,EAAW,aAAa,cAAe,EAAI,CAC7C,EAAG,GAAI,CACT,CAEA,oBAAoB3B,EAAME,EAAU,CAClC,OAAO,IAAI,UAAU,EAAE,gBAAgBF,EAAM,WAAW,EAAE,cAAcE,CAAQ,EAAE,SACpF,CAEA,cAAcK,EAAM,EACI,SAAS,eAAe,iBAAiB,GAAK,SAAS,eAAe,sBAAsB,GACpG,UAAU,IAAI,uBAAuB,EAEnD,IAAMqB,EAAmB,KAAK,iBAAiB,aAAarB,CAAI,oBAAoB,EAC9EsB,EAAyB,KAAK,iBAAiB,oBAAoBtB,CAAI,oBAAoB,EAEjG,CAAC,GAAGqB,EAAkB,GAAGC,CAAsB,EAAE,QAASL,GAAYA,EAAQ,UAAU,OAAO,QAAQ,CAAC,EAExG,SAAS,cAAc,KAAK,EAC5B,KAAK,sBAAsB,aAAa,cAAe,EAAK,CAC9D,CAEA,eAAejB,EAAM,EACG,SAAS,eAAe,iBAAiB,GAAK,SAAS,eAAe,sBAAsB,GACpG,UAAU,OAAO,uBAAuB,EAEtD,IAAMqB,EAAmB,KAAK,iBAAiB,aAAarB,CAAI,oBAAoB,EAC9EsB,EAAyB,KAAK,iBAAiB,oBAAoBtB,CAAI,oBAAoB,EAEjGqB,EAAiB,QAASJ,GAAYA,EAAQ,UAAU,IAAI,QAAQ,CAAC,EACrEK,EAAuB,QAASL,GAAYA,EAAQ,UAAU,IAAI,QAAQ,CAAC,CAC7E,CACF,EAEA,eAAe,OAAO,aAAclC,CAAS,EAExC,eAAe,IAAI,WAAW,GACjC,eAAe,OACb,YACA,cAAuB,WAAY,CACjC,aAAc,CACZ,MAAM,EAEN,KAAK,iBACH,QACA,SAAUD,GAAU,CAClB,IAAMsB,EAAO,KAAK,UAAU,CAAE,KAAMtB,EAAM,OAAO,KAAM,CAAC,EACxD,MAAM,GAAG,OAAO,eAAe,GAAIwB,EAAAC,EAAA,GAAK,YAAY,GAAjB,CAAyB,KAAAH,CAAO,EAAC,CACtE,EAAG,wBAAwB,CAC7B,CACF,CACF,CACF",
  "names": ["CartRemoveButton", "event", "CartItems", "__publicField", "debouncedOnChange", "id", "input", "index", "message", "inputValue", "response", "responseText", "html", "selectors", "selector", "targetElement", "sourceElement", "e", "sourceQty", "line", "quantity", "name", "variantId", "body", "section", "__spreadProps", "__spreadValues", "state", "parsedState", "quantityElement", "items", "cartDrawerWrapper", "cartFooter", "elementToReplace", "updatedValue", "lineItem", "overlay", "errors", "lineItemError", "cartStatus", "cartItemElements", "cartDrawerItemElements"]
}
