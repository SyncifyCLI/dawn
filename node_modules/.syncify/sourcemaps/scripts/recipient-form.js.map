{
  "version": 3,
  "sources": ["../../source/assets/scripts/recipient-form.js"],
  "sourcesContent": ["if (!customElements.get('recipient-form')) {\n  customElements.define(\n    'recipient-form',\n    class RecipientForm extends HTMLElement {\n      constructor() {\n        super();\n        this.recipientFieldsLiveRegion = this.querySelector(`#Recipient-fields-live-region-${this.dataset.sectionId}`);\n        this.checkboxInput = this.querySelector(`#Recipient-checkbox-${this.dataset.sectionId}`);\n        this.checkboxInput.disabled = false;\n        this.hiddenControlField = this.querySelector(`#Recipient-control-${this.dataset.sectionId}`);\n        this.hiddenControlField.disabled = true;\n        this.emailInput = this.querySelector(`#Recipient-email-${this.dataset.sectionId}`);\n        this.nameInput = this.querySelector(`#Recipient-name-${this.dataset.sectionId}`);\n        this.messageInput = this.querySelector(`#Recipient-message-${this.dataset.sectionId}`);\n        this.sendonInput = this.querySelector(`#Recipient-send-on-${this.dataset.sectionId}`);\n        this.offsetProperty = this.querySelector(`#Recipient-timezone-offset-${this.dataset.sectionId}`);\n        if (this.offsetProperty) this.offsetProperty.value = new Date().getTimezoneOffset().toString();\n\n        this.errorMessageWrapper = this.querySelector('.product-form__recipient-error-message-wrapper');\n        this.errorMessageList = this.errorMessageWrapper?.querySelector('ul');\n        this.errorMessage = this.errorMessageWrapper?.querySelector('.error-message');\n        this.defaultErrorHeader = this.errorMessage?.innerText;\n        this.currentProductVariantId = this.dataset.productVariantId;\n        this.addEventListener('change', this.onChange.bind(this));\n        this.onChange();\n      }\n\n      cartUpdateUnsubscriber = undefined;\n      variantChangeUnsubscriber = undefined;\n      cartErrorUnsubscriber = undefined;\n\n      connectedCallback() {\n        this.cartUpdateUnsubscriber = subscribe(PUB_SUB_EVENTS.cartUpdate, (event) => {\n          if (event.source === 'product-form' && event.productVariantId.toString() === this.currentProductVariantId) {\n            this.resetRecipientForm();\n          }\n        });\n\n        this.variantChangeUnsubscriber = subscribe(PUB_SUB_EVENTS.variantChange, (event) => {\n          if (event.data.sectionId === this.dataset.sectionId) {\n            this.currentProductVariantId = event.data.variant.id.toString();\n          }\n        });\n\n        this.cartUpdateUnsubscriber = subscribe(PUB_SUB_EVENTS.cartError, (event) => {\n          if (event.source === 'product-form' && event.productVariantId.toString() === this.currentProductVariantId) {\n            this.displayErrorMessage(event.message, event.errors);\n          }\n        });\n      }\n\n      disconnectedCallback() {\n        if (this.cartUpdateUnsubscriber) {\n          this.cartUpdateUnsubscriber();\n        }\n\n        if (this.variantChangeUnsubscriber) {\n          this.variantChangeUnsubscriber();\n        }\n\n        if (this.cartErrorUnsubscriber) {\n          this.cartErrorUnsubscriber();\n        }\n      }\n\n      onChange() {\n        if (this.checkboxInput.checked) {\n          this.enableInputFields();\n          this.recipientFieldsLiveRegion.innerText = window.accessibilityStrings.recipientFormExpanded;\n        } else {\n          this.clearInputFields();\n          this.disableInputFields();\n          this.clearErrorMessage();\n          this.recipientFieldsLiveRegion.innerText = window.accessibilityStrings.recipientFormCollapsed;\n        }\n      }\n\n      inputFields() {\n        return [this.emailInput, this.nameInput, this.messageInput, this.sendonInput];\n      }\n\n      disableableFields() {\n        return [...this.inputFields(), this.offsetProperty];\n      }\n\n      clearInputFields() {\n        this.inputFields().forEach((field) => (field.value = ''));\n      }\n\n      enableInputFields() {\n        this.disableableFields().forEach((field) => (field.disabled = false));\n      }\n\n      disableInputFields() {\n        this.disableableFields().forEach((field) => (field.disabled = true));\n      }\n\n      displayErrorMessage(title, body) {\n        this.clearErrorMessage();\n        this.errorMessageWrapper.hidden = false;\n        if (typeof body === 'object') {\n          this.errorMessage.innerText = this.defaultErrorHeader;\n          return Object.entries(body).forEach(([key, value]) => {\n            const errorMessageId = `RecipientForm-${key}-error-${this.dataset.sectionId}`;\n            const fieldSelector = `#Recipient-${key}-${this.dataset.sectionId}`;\n            const message = `${value.join(', ')}`;\n            const errorMessageElement = this.querySelector(`#${errorMessageId}`);\n            const errorTextElement = errorMessageElement?.querySelector('.error-message');\n            if (!errorTextElement) return;\n\n            if (this.errorMessageList) {\n              this.errorMessageList.appendChild(this.createErrorListItem(fieldSelector, message));\n            }\n\n            errorTextElement.innerText = `${message}.`;\n            errorMessageElement.classList.remove('hidden');\n\n            const inputElement = this[`${key}Input`];\n            if (!inputElement) return;\n\n            inputElement.setAttribute('aria-invalid', true);\n            inputElement.setAttribute('aria-describedby', errorMessageId);\n          });\n        }\n\n        this.errorMessage.innerText = body;\n      }\n\n      createErrorListItem(target, message) {\n        const li = document.createElement('li');\n        const a = document.createElement('a');\n        a.setAttribute('href', target);\n        a.innerText = message;\n        li.appendChild(a);\n        li.className = 'error-message';\n        return li;\n      }\n\n      clearErrorMessage() {\n        this.errorMessageWrapper.hidden = true;\n\n        if (this.errorMessageList) this.errorMessageList.innerHTML = '';\n\n        this.querySelectorAll('.recipient-fields .form__message').forEach((field) => {\n          field.classList.add('hidden');\n          const textField = field.querySelector('.error-message');\n          if (textField) textField.innerText = '';\n        });\n\n        [this.emailInput, this.messageInput, this.nameInput, this.sendonInput].forEach((inputElement) => {\n          inputElement.setAttribute('aria-invalid', false);\n          inputElement.removeAttribute('aria-describedby');\n        });\n      }\n\n      resetRecipientForm() {\n        if (this.checkboxInput.checked) {\n          this.checkboxInput.checked = false;\n          this.clearInputFields();\n          this.clearErrorMessage();\n        }\n      }\n    }\n  );\n}\n"],
  "mappings": "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",
  "names": ["_a", "_b", "_c", "__publicField", "event", "field", "title", "body", "key", "value", "errorMessageId", "fieldSelector", "message", "errorMessageElement", "errorTextElement", "inputElement", "target", "li", "textField"]
}
